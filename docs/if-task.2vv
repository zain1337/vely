.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
if-task \-  (request_information)
.SH PURPOSE
Select a request's task to process.

.SH SYNTAX

.RS 4
.EX

 if-task <task>
     <any code>
 [
 else-task <task>
     <any code>
 ] ...
 [
 else-task other
     <any code>
 ] 
 end-task

.EE
.RE

.SH DESCRIPTION
if-task will compare a value from the last executed \fBtask-param\fPeter with the list of string expressions, and execute code associated with the match. 

If the value of task-param matches the string expression <task> in if-task, then <any code> below it is executed. If it is not a match, then the value of task-param is checked against values in "else-task" clauses, one by one until a match is found and code under that clause executes. If no match is found, then code under "else-task other" clause (if specified) is executed, otherwise program control passes outside of if-task statement. 

In a given if-task statement, there can be only one "else-task other" clause, and it must be the last one in if-task statement.

For instance, a request named "customer" may be used to add a customer, update it, or delete it, and which one of these tasks is performed would be based on the value of a \fBtask-param\fPeter, as in these URLs where task "act" can have values of "add", "update" and "delete":

.RS 4
.EX

http://web.site/app/customer/act/add/name/joe/email/joe@joe.com
http://web.site/app/customer/act/update/id/22/address/10+Main+Street
http://web.site/app/customer/act/delete/id/22

.EE
.RE

The request handler code in file "customer.vely" would have this code:

.RS 4
.EX

request-handler /customer
    out-header default

    // Specify input parameter "act" to be a task selector
    task-param act 

    if-task "add"
        input-param name
        input-param email
        // Add customer
        ...
    else-task "update"
        input-param id
        input-param address
        // Update customer
        ...
    else-task "delete"
        input-param id
        // Delete customer
        ...
    else-task other
        @Unknown task.
    end-task
end-request-handler

.EE
.RE


.LP
.B MISSING TASK PARAMETERS
.LP

Note that if there is no \fBtask-param\fPeter (which is "act" in the above example), or if there is but such parameter is not present in request's input, the matched value in if-task will be an empty string (i.e. ""). 

.LP
.B NESTING AND SUBTASKS
.LP

if-task can be nested in case you want to change the task selector during the execution of a request handler, i.e. if you need to have sub-tasks. Such nesting can be up to 30 levels deep. In this example, a request "customer" has a task "act" with values of "add", "update" and "delete". A subtask "upd_type" (when task "act" has value of "update") has values of "address" and "phone":

.RS 4
.EX


request-handler /customer // request "customer"

    out-header default

    task-param act // task selector

    if-task "add" // task to add customer
        input-param name
        input-param email
        // Add customer
        ...
    else-task "update" // task to update customer
        input-param id
        task-param upd_type // subtask selector
        if-task "address" // subtask to update address
            input-param address
            // Update address
            ...
        else-task "phone" // subtask to update phone
            input-param phone
            // Update phone
            ...
        end-task
        ...
    else-task "delete" // task to delete customer
        input-param id
        // Delete customer
        ...
    else-task other
        @Unknown task.
    end-task
end-request-handler

.EE
.RE

.SH SEE ALSO
 
.B - Request information

\fBget-req\fP  
\fBif-task\fP  
\fBinput-param\fP  
\fBrequest-body\fP  
\fBset-input\fP  
\fBset-req\fP  
\fBtask-param\fP    
See all 
\fBdocumentation\fP
