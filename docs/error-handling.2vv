.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
error-handling \- Vely documentation (error-handling)
.SH DESCRIPTION

.LP
.B WHEN YOUR PROGRAM ERRORS OUT
.LP

"Erroring out" means your program has encountered insurmountable difficulty and it will end. For instance, it could be out of memory, or the database is permanently down and connection cannot be re-established. These are errors that cannot be handled. If your program is started with \fBvf\fP, it may be automatically restarted.

.LP
.B WHEN REPORT-ERROR IS CALLED
.LP

You can report an error in your Vely code with \fBreport-error\fP, after which:

.RS 4
\[bu]    
if it is started with \fBvf\fP (such as a \fBFastCGI\fP application), the program will not exit, but rather it will skip the rest of the request and move on to handle the next request, or

.RE

.RS 4
\[bu]    
if it is a \fBcommand-line\fP application, it will exit.
.RE


.LP
.B WHEN THERE IS A PROBLEM IN VELY
.LP

If there is a fatal internal error (i.e. error in Vely code itself that cannot be handled), it will be caught by Vely, and the program will end. If your program is started with \fBvf\fP, it may be automatically restarted.

.LP
.B LOGGING THE ERROR
.LP

Regardless of the type of error and regardless of whether the program exits or not, the error is logged and the program stack with full source code lines (see \fBvv\fP for including debug information) will be written to backtrace file (use -e option of \fBvv\fP to obtain its location). Note that the program stack is logged only if Vely is built in debugging mode (see "DI=1" option when making Vely \fBfrom source\fP); otherwise, production code may be slowed down by stack dumping.

You can see the list of last N errors (and the location of file containing backtrace for them) by using \fBvv\fP, for instance to see the last 3 errors:

.RS 4
.EX

vv -e 3

.EE
.RE

.SH SEE ALSO
 
.B - Error handling

\fBerror-code\fP  
\fBerror-handling\fP  
\fBon-error\fP  
\fBreport-error\fP    
See all 
\fBdocumentation\fP
