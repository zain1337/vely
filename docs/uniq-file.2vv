.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
uniq-file \-  (files)
.SH PURPOSE
Create a new empty file with a unique name.

.SH SYNTAX

.RS 4
.EX

uniq-file [ define ] <file name> [ temporary ]

.EE
.RE

.SH DESCRIPTION
One of the common tasks in many applications is creating a unique file (of any kind, including temporary). uniq-file statement does that - it creates a new unique file of zero size, with <file name> being its fully qualified name, which is always within the \fBfile-storage\fP. <file name> is \fBallocated memory\fP.

If string variable <file name> does not exist, it can be created with "define" clause. The file itself is created empty. If "temporary" clause is used, then the file created is a \fBtemporary-file\fP.

The file has no extension. You can rename it after it has been created to reflect its usage or purpose. 

All files created are setup with owner and group read/write only permissions.

.SH EXAMPLES
The following creates an empty file with auto-generated name that will be stored in "mydoc" variable. String variable "mydoc" is defined in the statement. The string "some data" is written to a newly created file:

.RS 4
.EX

uniq-file define mydoc 
write-file mydoc from "some data"

.EE
.RE

To create a temporary file:

.RS 4
.EX

uniq-file define temp_file temporary
\[char46]..
// use file named "temp_file"
\[char46].
delete-file temp_file

.EE
.RE

.SH SEE ALSO
 
.B - Files

\fBclose-file\fP  
\fBcopy-file\fP  
\fBdelete-file\fP  
\fBfile-position\fP  
\fBfile-storage\fP  
\fBfile-uploading\fP  
\fBlock-file\fP  
\fBopen-file\fP  
\fBread-file\fP  
\fBread-line\fP  
\fBrename-file\fP  
\fBstat-file\fP  
\fBtemporary-file\fP  
\fBuniq-file\fP  
\fBunlock-file\fP  
\fBwrite-file\fP    
See all 
\fBdocumentation\fP
