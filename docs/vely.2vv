.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
vely \- Vely documentation (general)
.SH DESCRIPTION
About Vely

.LP
.B VELY
.LP

Vely is a general-purpose framework for rapid development of high-performance and lighweight software applications. It is especially well suited for web applications. It's Free \fBOpen Source\fP (under the \fBEclipse Public License 2 (EPL-2)\fP). 

Vely is not object-oriented, rather it's declarative and functional. It's simple to design, write and maintain applications.

Vely applications are 100% native, high-performance and low-footprint without interpreters or byte-code schemes. Decades of adding more energy-intensive and ever-complex abstractions on top of programming languages led to programming code \fBthat's bad for the environment\fP. 

.LP
.B STATEMENTS
.LP

Vely \fBstatements\fP are declarative, descriptive and short. You'd spend less time figuring out how to achieve something, and more time moving forward.

Vely statements include string manipulation, querying databases, outputting data, distributed computing, file manipulation, memory structures like hash and fifo, program execution, encryption, encoding, JSON parsing, web stuff like cookies, input parameters, uploading and downloading files, request handling, daemonizing etc. - in short, lots of very common and useful tasks you need all the time.

.LP
.B INTUITIVE AND PRACTICAL
.LP

Vely statements are easy to read and write. You write them inside skeleton C code so there is no need to learn anything new about the layer underneath; C is quite simple and well-known. 

The scope of Vely statements is typically narrow and the generated code is shallow and direct, similar to what an experienced C programmer would write, incurring virtually no loss of performance. The arguments are specified in any order by naming their purpose, which is important for teams where readability is of utmost importance. 

Vely is about productivity, safety and performance. The idea is to not sacrifice performance at all, and to improve productivity and safety significantly.

.LP
.B MEMORY SAFETY
.LP

When you use Vely statements, you do not need to allocate/free memory, or worry about buffer overruns or memory violations; you also get automatic memory freeing and automatic file closing. Vely is safer than pure C.

.LP
.B WHY GENERATE C
.LP

Vely generates C code underneath for several reasons. It is the shortest route to maximum performance and the smallest memory footprint. C is simple. It also allows usage of virtually any library in existence. And Vely statements are carefully crafted with the goal of generating fast and safe C code on their own. Vely itself is written in C.

The reason why you wouldn't have used C in the past may have been buffer overwrites, memory management and low-level coding. Vely changes that by turning C into a rapid software development platform that's safer and easier.

Vely's goal is not to write more C code, quite the opposite. By using Vely anywhere possible, C code can be used as a supporting mechanism for Vely statements, such as declaring variables, conditional statements, program flow and usage of external libraries. This means the important and difficult parts are done by single-line Vely statements.

C is the \fBfastest and most energy-efficient\fP programming language, which is the reason why it's widely used in system programming and infrastructure software. Performance is important everywhere, and especially in the Cloud, where smaller and faster means less CPU seconds, less RAM, less money spent, less energy used and less emissions. And \fBMoore's law\fP may or may not be failing, but it will take significantly more funding, time and expenditure of all kinds to keep it going, and at some point it may no longer. 

.LP
.B QUALITY
.LP

Each Vely release must pass rigorous continuous tests on every platform where it's available before it's released. There are currently 1763 such tests, see \fBquality_control\fP. See \fBrelease_notes\fP for what's new in each release.

.LP
.B REPORT BUGS, REQUEST FEATURES, CONTACT
.LP

Contact at \fBvely@vely.dev\fP - send questions, bugs or suggest new features.

.LP
.B SOURCE CODE
.LP

Official source code git repo is \fBhere\fP (click on Source to clone), and mirrors are on \fBgithub\fP and \fBgitlab\fP.

.LP
.B AUTHOR
.LP

Vely's author is \fBSergio Mijatovic\fP.
.SH SEE ALSO
 
.B - General

\fBapplication_architecture\fP  
\fBdeploying_application\fP  
\fBhow_vely_works\fP  
\fBquality_control\fP  
\fBrename_files\fP  
\fBSELinux\fP  
\fBvely\fP  
\fBvely_architecture\fP  
\fBvely_removal\fP  
\fBvf\fP  
\fBvv\fP    
See all 
\fBdocumentation\fP
