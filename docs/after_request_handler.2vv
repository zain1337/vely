.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
after_request_handler \-  (requests)
.SH PURPOSE
Execute your code after a request is handled.

.SH SYNTAX

.RS 4
.EX

void _after ( ) ...

.EE
.RE

.SH DESCRIPTION
Every Vely request goes through a request dispatcher (i.e. \fBvely_dispatch_request\fP() function). In order to specify your code to execute after a request is handled, create a source file "_after.vely" and implement a function "void _after()", which will be automatically picked up and compiled with your application. 

If no request executes (for example if your application does not handle a given \fBrequest\fP), after-request handler does not execute either. If you use \fBexit-request\fP to exit current request handling, after-request handler still executes.

.SH EXAMPLES
Here is a simple implementation of after-request handler that just outputs "Hi there!!":

.RS 4
.EX

\[char35]include <vely.h>
  
void _after()
{
     @Hi there!! 
}

.EE
.RE

.SH SEE ALSO
 
.B - Requests

\fBafter_request_handler\fP  
\fBbefore_request_handler\fP  
\fBbuilding_URL\fP  
\fBend-request-handler\fP  
\fBgetting_URL\fP  
\fBglobal_request_data\fP  
\fBnon_request\fP  
\fBnormalized_URL\fP  
\fBrequest\fP  
\fBrequest-handler\fP  
\fBrequest_URL\fP  
\fBstartup_handler\fP  
\fBvely_dispatch_request\fP    
See all 
\fBdocumentation\fP
