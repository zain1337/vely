.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
startup_handler \-  (requests)
.SH PURPOSE
Execute your code once before any request handlers do.

.SH SYNTAX

.RS 4
.EX

void _startup ( ) ...

.EE
.RE

.SH DESCRIPTION
To specify your code to execute once before any \fBrequest\fPs are handled, create a source file "_startup.vely" and implement a function "void _startup()", which will be automatically picked up and compiled with your application. 

Startup handler will execute just before the first request. It will not execute when the application starts, but when it receives the very first request.

Important: if you need cross-request global variables that would be available for the life of the process, i.e. to any request served by this process, do not use result(s) of any Vely statements, because such memory is released at the end of each request, and thus would become invalid after very first request served by this process. If you must, you can use either global variables or use C's "malloc()" functions. Note however, that this is rarely needed and generally should be avoided.

.SH EXAMPLES
Here is a simple implementation of startup handler that just outputs "Hi there!!":

.RS 4
.EX

\[char35]include <vely.h>
  
void _startup()
{
    out-header default
    @Hi there!! 
}

.EE
.RE

.SH SEE ALSO
 
.B - Requests

\fBafter_request_handler\fP  
\fBbefore_request_handler\fP  
\fBbuilding_URL\fP  
\fBend-request-handler\fP  
\fBgetting_URL\fP  
\fBglobal_request_data\fP  
\fBnon_request\fP  
\fBnormalized_URL\fP  
\fBrequest\fP  
\fBrequest-handler\fP  
\fBrequest_URL\fP  
\fBstartup_handler\fP  
\fBvely_dispatch_request\fP    
See all 
\fBdocumentation\fP
