.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
rollback-transaction \-  (database)
.SH PURPOSE
Rollbacks a SQL transaction.

.SH SYNTAX

.RS 4
.EX

rollback-transaction [ @<database> ] [ on-error-continue | on-error-exit ] [ error [ define ] <error> ] [ error-text [ define ] <error text> ]

.EE
.RE

.SH DESCRIPTION
rollback-transaction will roll back a transaction started with \fBbegin-transaction\fP. 

.LP
.B DATABASE
.LP

Optional <database> is specified in "@" clause and is the name of the \fBdatabase-config-file\fP. 

.LP
.B ERROR HANDLING
.LP

The error code is available in  <error> variable in optional "error" clause - this code is always "0" if successful. The <error> code may or may not be a number but is always returned as a string value. <error> is \fBallocated memory\fP. In case of error, error text is available in optional "error-text" clause in <error text>, which is \fBallocated memory\fP.

"on-error-continue" clause specifies that \fBrequest\fP processing will continue in case of error, whereas "on-error-exit" clause specifies that it will exit. This setting overrides database-level \fBon-error\fP for this specific statement only. If you use "on-error-continue", be sure to check the error code.

<error> and <error text> can be created with optional "define".

Note that if database connection was lost, and could not be reestablished, the request will error out (see \fBerror-handling\fP).

.SH EXAMPLES

.RS 4
.EX

begin-transaction @mydb
run-query @mydb="insert into employee (name, dateOfHire) values ('Terry', now())" 
run-query @mydb="insert into payroll (name, salary) values ('Terry', 100000)" 
rollback-transaction @mydb

.EE
.RE

.SH SEE ALSO
 
.B - Database

\fBbegin-transaction\fP  
\fBcommit-transaction\fP  
\fBcurrent-row\fP  
\fBdatabase-config-file\fP  
\fBdatabase-queries\fP  
\fBdelete-query\fP  
\fBon-error\fP  
\fBprepared-statements\fP  
\fBquery-result\fP  
\fBrollback-transaction\fP  
\fBrun-query\fP    
See all 
\fBdocumentation\fP
