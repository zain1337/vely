.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
request \- Vely documentation (requests)
.SH DESCRIPTION
Vely application runs by processing requests. A request always takes form of an HTTP request, meaning a URL and an optional HTTP request body. This is regardless of whether it's an \fBapplication server\fP or a \fBcommand-line\fP application. See \fBrequest-URL\fP for more details on the structure of a URL, and \fBbuilding-URL\fP on using URL in your application.

\fBvely-dispatch-request\fP (a main Vely request dispatcher) uses request name to execute the appropriate function that handles the request.

This handling is based on the names of .vely files, i.e. source code files that make up your application. The request name always matches the file name that implements it. 

So for example, file "get_stock.vely" handles request "get_stock" by implementing a function "void get_stock()" in it (the implementation is done by using \fBrequest-handler\fP). A request that is meant to call this function would have "/get_stock" in its URL path right after the application path (see \fBrequest-URL\fP). The routing of this request to the namesake function will be done automatically by Vely. For instance, if application name is "trading" and request name "get_stock", such request would be called by URL like (note that hyphens are converted to underscores, so "get-stock" is the same as "get_stock"):

.RS 4
.EX

http://<your website>/trading/get-stock?some_param=some_value...

.EE
.RE

Thus file "get_stock.vely" must implement a function "void get_stock()" (with \fBrequest-handler\fP), and in the code below, it simply outputs text "Hello from get_stock: some_value":

.RS 4
.EX

request-handler /get-stock
    input-param some_param
    @Hello from get-stock: <<p-out some_param>>
end-request-handler

.EE
.RE

If the name of .vely file starts with an underscore ("_"), then it is a \fBnon-request\fP file and it will not handle a request. See \fBhow-vely-works\fP.

.LP
.B TASKS
.LP

A request can have any number of input parameters, and based on some of them, perform one or more tasks. See \fBtask-param\fPeters. In general, selecting what exactly will be done within a request is determined by a request name and optional \fBtask-param\fPeter values within the request. Often, a request performs a single task. See \fBapplication-architecture\fP.
.SH SEE ALSO
 
.B - Requests

\fBafter-request-handler\fP  
\fBbefore-request-handler\fP  
\fBbuilding-URL\fP  
\fBgetting-URL\fP  
\fBglobal-request-data\fP  
\fBnon-request\fP  
\fBnormalized-URL\fP  
\fBrequest\fP  
\fBrequest-handler\fP  
\fBrequest-URL\fP  
\fBstartup-handler\fP  
\fBvely-dispatch-request\fP    
See all 
\fBdocumentation\fP
